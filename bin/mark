#!/usr/bin/env node

var argv = require('optimist')
	.boolean('l', {
		alias: 'list'
	})
	.options('d', {
		alias: 'delete'
	})
	.options('h', {
		alias: 'help'
	}) 
	.argv;


var fs = require('fs');
var homedir = process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;
var file = (argv.f||argv.file);
var directory = (file&&make_path(file))||process.cwd();
var markTest, markName=argv._[0]||"default";
var markFile=homedir+"/.marked_destinations";
var readline = require('readline');
var markSet;


function make_path(name){
	if(!name.match(/$[\/|~]/)){
		name = process.cwd()+"/"+name;
	}
	return name;
}

var rl = readline.createInterface({
  input: process.stdin,
	output: process.stdout
});

try {
	markSet = JSON.parse(fs.readFileSync(markFile, 'utf8'));
}catch(e){
	markSet = { }
}

if(argv.l || argv.list){
	console.log(JSON.stringify(markSet, null, '\t'));
	process.exit();
}

if(argv.d || argv.del || argv.delete){
	markName = argv.d || argv.del || argv.delete; 
	if(markName === true){
		for(markTest in markSet){
			if(markSet[markTest] == process.cwd()){
				markName = markTest;
				break;
			}
		}
	}
	if(markSet[markName]){
		delete markSet[markName];
		fs.writeFile(markFile, JSON.stringify(markSet, null, '\t'), {}, function(){
			console.log('deleted mark named "'+markName+'"');
			process.exit();
		});
	}else{
		console.log('no mark found named "'+markName+'"');
		process.exit();
	}
}

if(!argv.h && !argv.help && !argv.d && !argv.del && !argv.delete && !argv.l && !argv.list){
	setMark(markName);
}

function setMark(markName){
	if(markSet[markName]){
		rl.question("a mark named "+markName+" already exists.\n\twould you like to overwrite it? [ Y/n ] ", function(answer) {
			if(answer.toLowerCase().trim()!='n'){
				markSet[markName] = directory;
				console.error("overwriting marker");
				fs.writeFileSync(markFile, JSON.stringify(markSet, null, '\t'))
			}else{
				console.error("exiting");
			}
			rl.close();
		});
	}else{
		markSet[markName] = directory;
		fs.writeFileSync(markFile, JSON.stringify(markSet, null, '\t'))
		process.exit();
	}
}
